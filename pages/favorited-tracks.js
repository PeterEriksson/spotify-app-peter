import {
  ArrowLeftOnRectangleIcon,
  PlusIcon,
  TrashIcon,
} from "@heroicons/react/24/solid";
import Head from "next/head";
import React, { useState } from "react";
import { SocialIcon } from "react-social-icons";
import { Tooltip } from "react-tooltip";
import Sidebar from "../components/Sidebar";
import styles from "../styles/tooltip.module.css";
import Header from "../components/Header";
import Song from "../components/Song";
import { useDispatch, useSelector } from "react-redux";
import { selectItems as selectFavoritedItmes } from "../slices/favoritesSlice";
import { getSession, useSession } from "next-auth/react";
import { useRouter } from "next/router";
import { emptyFavorites } from "../slices/favoritesSlice";
import { /* toast */ Toaster } from "react-hot-toast";
import SongExtended from "../components/SongExtended";
import Modal from "../components/Modal";

function favoritedTracks() {
  const [openNewPlaylistModal, setOpenNewPlaylistModal] = useState(false);

  const { data: session } = useSession();
  const favoritedItems = useSelector(selectFavoritedItmes);
  const dispatch = useDispatch();

  const clearFavorites = () => {
    dispatch(emptyFavorites());
  };

  const handlePlusClick = () => {
    setOpenNewPlaylistModal((prev) => !prev);
  };

  return (
    <div className="flex/ h-screen    ">
      <Head>
        <title>TrackTrends: Favorited Songs</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Sidebar /> */}

      {/* <div className=" w-screen bg-bodyBackground  overflow-y-scroll   "> */}
      <Toaster position="top-center" />
      {/* <Header /> */}

      <h1 className="text-3xl text-white text-center uppercase tracking-wide">
        favorited songs
      </h1>
      <h3 className="text-base text-white text-center mx-2">
        Add tracks to your liked on Spotify or create a new playlist
      </h3>

      <Modal
        openNewPlaylistModal={openNewPlaylistModal}
        setOpenNewPlaylistModal={setOpenNewPlaylistModal}
        favoritedItems={favoritedItems}
      />

      <button
        onClick={handlePlusClick}
        data-tooltip-id="create"
        className={`connectingToTooltip: create ${
          favoritedItems.length > 0 && "hover:scale-105"
        } 
        bottom-14 right-4 xxs:bottom-4    absolute z-50 rounded-full p-4 bg-spotifyGreen transform transition duration-200 ease-in  `}
      >
        <PlusIcon className="h-9 w-9 text-white" />
      </button>

      <TrashIcon
        onClick={() => dispatch(emptyFavorites())}
        data-tooltip-id="trash"
        className={` trash ${
          favoritedItems == 0 && "hidden"
        } bottom-16 xxs:bottom-7    h-8 w-8 absolute cursor-pointer z-30  ml-4 text-white transform transition duration-200 ease-in hover:scale-105`}
      />
      <Tooltip
        content="Clear all songs"
        className={`${styles.bottomButton}`}
        anchorSelect=".trash"
        delayShow={300}
      />

      <div className="pb-3 xxs:pb-0     !mx-5 gap-3 my-3 grid grid-cols-1 xs:grid-cols-2  md:grid-cols-3 mdlg:grid-cols-4 lg:grid-cols-5 lg:mx-auto lg:px-2 max-w-4xl ">
        {favoritedItems.map((track, i) => (
          <SongExtended key={i} track={track} noPlay />
        ))}
      </div>
      {/* </div> */}
    </div>
  );
}

export default favoritedTracks;

//onload issue -> pre-fetch the session / pre render the user ->
export async function getServerSideProps(context) {
  const session = await getSession(context);
  return {
    props: {
      session,
    },
  };
}
